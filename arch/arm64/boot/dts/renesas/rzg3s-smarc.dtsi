// SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
/*
 * Device Tree Source for the RZ SMARC Carrier-II Board.
 *
 * Copyright (C) 2023 Renesas Electronics Corp.
 */

#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/pinctrl/rzg2l-pinctrl.h>
#include <dt-bindings/input/input.h>

/ {
	aliases {
		serial0 = &scif0;
		serial1 = &scif1;
		serial2 = &scif3;
		mmc1 = &sdhi1;
	};

	vcc_sdhi1: regulator-vcc-sdhi1 {
		compatible = "regulator-fixed";
		regulator-name = "SDHI1 Vcc";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		gpios = <&pinctrl RZG2L_GPIO(2, 3) GPIO_ACTIVE_HIGH>;
		enable-active-high;
	};

	vccq_sdhi1: regulator-vccq-sdhi1 {
		compatible = "regulator-gpio";
		regulator-name = "SDHI1 VccQ";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <3300000>;
		gpios = <&pinctrl RZG2L_GPIO(4, 2) GPIO_ACTIVE_HIGH>;
		gpios-states = <1>;
		states = <3300000 1>, <1800000 0>;
	};

	vbus0_usb2: regulator-vbus0-usb2 {
		compatible = "regulator-fixed";
		regulator-name = "USB20_VBUS0";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
	};

	dummy_codec: codec_test {
		compatible = "linux,snd-soc-dummy";
		#sound-dai-cells = <0>;
	};

	snd_rzg2l: sound {
		compatible = "simple-audio-card";
		simple-audio-card,name = "snd_rzg3s";

		ssi_link: simple-audio-card,dai-link@0 {
			format = "i2s";
			bitclock-master = <&cpu_dai0>;
			frame-master = <&cpu_dai0>;
			mclk-fs = <256>;

			cpu_dai0: cpu {
				sound-dai = <&ssi3>;
			};

			codec {
				sound-dai = <&da7212>;
				clocks = <&versa3 4>;
			};
		};

#if SPDIF_SEL == SW_ON
		spdif_link: simple-audio-card,dai-link@1 {
			bitclock-master = <&cpu_dai1>;
			frame-master = <&cpu_dai1>;

			cpu_dai1: cpu {
				sound-dai = <&spdif>;
			};

			codec {
				sound-dai = <&dummy_codec>;
			};
		};
#endif
	};

	keys {
		compatible = "gpio-keys";

		key-1 {
			interrupts = <RZG2L_GPIO(18, 0) IRQ_TYPE_EDGE_FALLING>;
			interrupt-parent = <&pinctrl>;
			linux,code = <KEY_1>;
			label = "USER_SW1";
			wakeup-source;
			debounce-interval = <20>;
		};

		key-2 {
			interrupts = <RZG2L_GPIO(0, 1) IRQ_TYPE_EDGE_FALLING>;
			interrupt-parent = <&pinctrl>;
			linux,code = <KEY_2>;
			label = "USER_SW2";
			wakeup-source;
			debounce-interval = <20>;
		};

		key-3 {
			interrupts = <RZG2L_GPIO(0, 3) IRQ_TYPE_EDGE_FALLING>;
			interrupt-parent = <&pinctrl>;
			linux,code = <KEY_3>;
			label = "USER_SW3";
			wakeup-source;
			debounce-interval = <20>;
		};
	};
};

&audio_clk1 {
	clock-frequency = <11289600>;
};

&audio_clk2 {
	clock-frequency = <12288000>;
};

&i2c0 {
	status = "okay";

	da7212: codec@1a {
		compatible = "dlg,da7212";

		#sound-dai-cells = <0>;
		#address-cells = <1>;
		#size-cells = <0>;

		reg = <0x1a>;

		clocks = <&versa3 4>;
		clock-names = "mclk";

		dlg,micbias1-lvl = <2500>;
		dlg,micbias2-lvl = <2500>;
		dlg,dmic-data-sel = "lrise_rfall";
		dlg,dmic-samplephase = "between_clkedge";
		dlg,dmic-clkrate = <3000000>;

		VDDA-supply = <&reg_1p8v>;
		VDDSP-supply = <&reg_3p3v>;
		VDDMIC-supply = <&reg_3p3v>;
		VDDIO-supply = <&reg_1p8v>;
	};
};

&i2c1 {
	status = "okay";

	versa3: versa3@68 {
		compatible = "renesas,5p35023";
		reg = <0x68>;
		#clock-cells = <1>;
		clocks = <&x3_clk>;
		clock-names = "x1";
		renesas,settings = [
		  80 00 11 05 40 08 cc 2e 06 7d 20 1a 5f 1e f2 27
		  00 34 af 4f 00 00 00 00 04 0c 1c 18 3f 30 90 c6
		  80 80 30 30 95
		];
		assigned-clocks = <&versa3 0>,
				   <&versa3 1>,
				   <&versa3 2>,
				   <&versa3 3>,
				   <&versa3 4>,
				   <&versa3 5>;
		assigned-clock-rates =	<100000000>, <100000000>,
					<25000000>, <11289600>,
					<12288000>, <24000000>;
		clock-divider-read-only = <1>, <1>, <1>, <1>, <1>;
		clock-flags = <2176>, <2176>, <2176>, <2176>, <2052>, <2048>;
	};
};

&pinctrl {
	pinctrl-0 = <&sound_clk_pins>;
	pinctrl-names = "default";

	gpt0_pins: gpt {
		pinmux = <RZG2L_PORT_PINMUX(13, 0, 2)>, /* GTIOC0A - GPIO8 */
			 <RZG2L_PORT_PINMUX(13, 1, 2)>; /* GTIOC0B - GPIO9 */
	};

	poega_pins: poega {
		pinmux = <RZG2L_PORT_PINMUX(18, 0, 6)>; /* GTERGA - GPIO4 */
	};

	scif0_pins: scif0 {
		pinmux = <RZG2L_PORT_PINMUX(6, 3, 1)>, /* RXD */
			 <RZG2L_PORT_PINMUX(6, 4, 1)>; /* TXD */
	};

#if SW_CONFIG3 == SW_ON && SPDIF_SEL == SW_OFF
	scif1_pins: scif1 {
		pinmux = <RZG2L_PORT_PINMUX(14, 0, 1)>, /* TXD */
			 <RZG2L_PORT_PINMUX(14, 1, 1)>, /* RXD */
			 <RZG2L_PORT_PINMUX(16, 0, 1)>, /* CTS# */
			 <RZG2L_PORT_PINMUX(16, 1, 1)>; /* RTS# */
	};
#elif SPDIF_SEL == SW_ON
	spdif_pins: spdif {
		pinmux = <RZG2L_PORT_PINMUX(16, 0, 2)>, /* SPDIF_IN */
			 <RZG2L_PORT_PINMUX(16, 1, 2)>; /* SPDIF_OUT */
	};
#endif

	scif3_pins: scif3 {
		pinmux = <RZG2L_PORT_PINMUX(17, 3, 7)>, /* TXD */
			 <RZG2L_PORT_PINMUX(17, 2, 7)>; /* RXD */
	};

	sdhi1_pins: sd1 {
		data {
			pins = "SD1_DATA0", "SD1_DATA1", "SD1_DATA2", "SD1_DATA3";
			power-source = <3300>;
		};

		ctrl {
			pins = "SD1_CLK", "SD1_CMD";
			power-source = <3300>;
		};

		cd1 {
			pinmux = <RZG2L_PORT_PINMUX(0, 2, 1)>; /* SD1_CD */
		};
	};

	sdhi1_pins_uhs: sd1-uhs {
		data {
			pins = "SD1_DATA0", "SD1_DATA1", "SD1_DATA2", "SD1_DATA3";
			power-source = <1800>;
		};

		ctrl {
			pins = "SD1_CLK", "SD1_CMD";
			power-source = <1800>;
		};

		cd {
			pinmux = <RZG2L_PORT_PINMUX(0, 2, 1)>; /* SD1_CD */
		};
	};

#if SW_GPIO_CAN_PMOD1 == SW_ON
	/* GPIO8_CAN0_STB */
	can0-stb-hog {
		gpio-hog;
		gpios = <RZG2L_GPIO(13, 0) GPIO_ACTIVE_HIGH>;
		output-low;
		line-name = "can0_stb";
	};
#endif

#if SW_GPIO_CAN_PMOD2 == SW_ON
	/* GPIO9_CAN0_STB */
	can1-stb-hog {
		gpio-hog;
		gpios = <RZG2L_GPIO(13, 1) GPIO_ACTIVE_HIGH>;
		output-low;
		line-name = "can1_stb";
	};
#endif

	can0_pins: can0 {
		pinmux = <RZG2L_PORT_PINMUX(6, 1, 3)>, /* TX */
			 <RZG2L_PORT_PINMUX(6, 2, 3)>; /* RX */
	};

	can1_pins: can1 {
		pinmux = <RZG2L_PORT_PINMUX(17, 0, 3)>, /* TX */
			 <RZG2L_PORT_PINMUX(17, 1, 3)>; /* RX */
	};

	sound_clk_pins: sound_clk {
		pins = "AUDIO_CLK1", "AUDIO_CLK2";
		input-enable;
	};

	ssi3_pins: ssi3 {
		pinmux = <RZG2L_PORT_PINMUX(18, 1, 8)>, /* BCK */
			 <RZG2L_PORT_PINMUX(18, 2, 8)>, /* RCK */
			 <RZG2L_PORT_PINMUX(18, 3, 8)>, /* TXD */
			 <RZG2L_PORT_PINMUX(18, 4, 8)>; /* RXD */
	};

	usb0_pins: usb0 {
		peri {
			pinmux = <RZG2L_PORT_PINMUX(5, 0, 1)>, /* VBUS */
				 <RZG2L_PORT_PINMUX(5, 2, 1)>; /* OVC */
		};

		otg {
			pinmux = <RZG2L_PORT_PINMUX(5, 3, 1)>; /* OTG_ID */
			bias-pull-up;
		};
	};

	usb1_pins: usb1 {
		pinmux = <RZG2L_PORT_PINMUX(5, 4, 5)>, /* OVC */
			 <RZG2L_PORT_PINMUX(6, 0, 1)>; /* VBUS */
	};

	spi0_pins: spi0 {
		pinmux = <RZG2L_PORT_PINMUX(15, 0, 1)>, /* CK */
			 <RZG2L_PORT_PINMUX(15, 1, 1)>, /* MOSI */
			 <RZG2L_PORT_PINMUX(15, 2, 1)>, /* MISO */
			 <RZG2L_PORT_PINMUX(15, 3, 1)>; /* SSL */
	};

	pcie0_pins: pcie0 {
		pinmux = <RZG2L_PORT_PINMUX(13, 3, 2)>, /* PCIE_CLKREQ_N */
			 <RZG2L_PORT_PINMUX(13, 2, 2)>; /* PCIE_RST_OUT# */
	};
};

&gpt0 {
	pinctrl-0 = <&gpt0_pins>;
	pinctrl-names = "default";
	channel = "both_AB";
	poeg = <&poega>;
	status = "okay";
};

&poega {
	pinctrl-0 = <&poega_pins>;
	pinctrl-names = "default";
	status = "okay";
};

&scif0 {
	pinctrl-names = "default";
	pinctrl-0 = <&scif0_pins>;
	status = "okay";
};

/* Be noticed that SW_OP_MUX[4] must be turned on to use SCIF1(SER0) at PMOD1-3A. */
#if SW_CONFIG3 == SW_ON && SPDIF_SEL == SW_OFF
&scif1 {
	pinctrl-0 = <&scif1_pins>;
	pinctrl-names = "default";
	uart-has-rtscts;
	status = "okay";
};
#elif SPDIF_SEL == SW_ON
&spdif {
	pinctrl-0 = <&spdif_pins>;
	pinctrl-names = "default";
	status = "okay";
};
#endif

&scif3 {
	pinctrl-0 = <&scif3_pins>;
	pinctrl-names = "default";
	status = "okay";
};

&sdhi1 {
	pinctrl-0 = <&sdhi1_pins>;
	pinctrl-1 = <&sdhi1_pins_uhs>;
	pinctrl-names = "default", "state_uhs";
	vmmc-supply = <&vcc_sdhi1>;
	vqmmc-supply = <&vccq_sdhi1>;
	bus-width = <4>;
	sd-uhs-sdr50;
	sd-uhs-sdr104;
	max-frequency = <125000000>;
	status = "okay";
};

&canfd {
	pinctrl-0 = <&can0_pins &can1_pins>;
	pinctrl-names = "default";
	status = "okay";

	channel0 {
		status = "okay";
	};

	channel1 {
		status = "okay";
	};
};

&ssi3 {
	pinctrl-0 = <&ssi3_pins>;
	pinctrl-names = "default";

	status = "okay";
};

&ohci0 {
	dr_mode = "otg";
	status = "okay";
};

&ohci1 {
	status = "okay";
};

&ehci0 {
	dr_mode = "otg";
	status = "okay";
};

&ehci1 {
	status = "okay";
};

&hsusb {
	dr_mode = "otg";
	status = "okay";
};

&usb2_phy0 {
	pinctrl-0 = <&usb0_pins>;
	pinctrl-names = "default";

	vbus-supply = <&vbus0_usb2>;
	status = "okay";
};

&usb2_phy1 {
	pinctrl-0 = <&usb1_pins>;
	pinctrl-names = "default";

	status = "okay";
};

&phyrst {
	status = "okay";
};

&spi0 {
	pinctrl-0 = <&spi0_pins>;
	pinctrl-names = "default";

	dmas = <&dmac 0x2ed9>, <&dmac 0x2eda>;
	dma-names = "tx", "rx";

	status = "okay";
#if RSPI0_LOOPBACK_SEL
	spidev@0 {
		compatible = "rohm,dh2228fv";
		reg = <0>;
		spi-max-frequency = <50000000>;
	};
#else
	flash0: mt25ql256a@0 {
		compatible = "micron,mt25ql256a", "jedec,spi-nor";
		reg = <0>;
		spi-max-frequency = <9500000>;
		spi-tx-bus-width = <1>;
		spi-rx-bus-width = <1>;
		m25p,fast-read;

		partitions {
			compatible = "fixed-partitions";
			#address-cells = <1>;
			#size-cells = <1>;

			scratch@0 {
				reg = <0x00000000 0x2000000>;
			};
		};
	};
#endif
};

&pcie0 {
	status = "okay";

	pinctrl-0 = <&pcie0_pins>;
	pinctrl-names = "default";
};
